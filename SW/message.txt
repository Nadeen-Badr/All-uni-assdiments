-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://redmine.postgresql.org/projects/pgadmin4/issues/new if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.activities
(
    activity_id integer NOT NULL DEFAULT nextval('activities_activity_id_seq'::regclass),
    activity_text character varying(255) COLLATE pg_catalog."default" NOT NULL,
    icon_url text COLLATE pg_catalog."default",
    CONSTRAINT activities_pkey PRIMARY KEY (activity_id)
);

CREATE TABLE IF NOT EXISTS public.activity_recommendations
(
    recommendation_id integer NOT NULL DEFAULT nextval('activity_recommendations_recommendation_id_seq'::regclass),
    type character varying(50) COLLATE pg_catalog."default",
    activity_name character varying(255) COLLATE pg_catalog."default",
    CONSTRAINT activity_recommendations_pkey PRIMARY KEY (recommendation_id),
    CONSTRAINT activity_recommendations_activity_name_key UNIQUE (activity_name)
);

CREATE TABLE IF NOT EXISTS public.cbt_questions
(
    question_id integer NOT NULL DEFAULT nextval('cbt_questions_question_id_seq'::regclass),
    type_id integer,
    question_text text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT cbt_questions_pkey PRIMARY KEY (question_id)
);

CREATE TABLE IF NOT EXISTS public.cbt_types
(
    type_id integer NOT NULL DEFAULT nextval('cbt_types_type_id_seq'::regclass),
    type_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    icon_url text COLLATE pg_catalog."default",
    type_info text COLLATE pg_catalog."default",
    CONSTRAINT cbt_types_pkey PRIMARY KEY (type_id)
);

CREATE TABLE IF NOT EXISTS public.daily_emotion_tracks
(
    track_id integer NOT NULL DEFAULT nextval('daily_emotion_tracks_track_id_seq'::regclass),
    user_id integer,
    activity character varying(255) COLLATE pg_catalog."default",
    reason character varying(255) COLLATE pg_catalog."default",
    emotion character varying(255) COLLATE pg_catalog."default",
    sub_emotion character varying(255) COLLATE pg_catalog."default",
    has_stress boolean,
    track_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    additional_notes text COLLATE pg_catalog."default",
    CONSTRAINT daily_emotion_tracks_pkey PRIMARY KEY (track_id)
);

CREATE TABLE IF NOT EXISTS public.depression_test_answeroption
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    value integer NOT NULL,
    label character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT depression_test_answeroption_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.depression_test_scores
(
    score_id integer NOT NULL DEFAULT nextval('depression_test_scores_score_id_seq'::regclass),
    user_id integer,
    score integer NOT NULL,
    test_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT depression_test_scores_pkey PRIMARY KEY (score_id)
);

CREATE TABLE IF NOT EXISTS public.depression_test_testquestion
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    question character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT depression_test_testquestion_pkey PRIMARY KEY (id)
);

CREATE TABLE IF NOT EXISTS public.depression_test_testquestion_answer_options
(
    id bigint NOT NULL GENERATED BY DEFAULT AS IDENTITY ( INCREMENT 1 START 1 MINVALUE 1 MAXVALUE 9223372036854775807 CACHE 1 ),
    testquestion_id bigint NOT NULL,
    answeroption_id bigint NOT NULL,
    CONSTRAINT depression_test_testquestion_answer_options_pkey PRIMARY KEY (id),
    CONSTRAINT depression_test_testques_testquestion_id_answerop_020f5d71_uniq UNIQUE (testquestion_id, answeroption_id)
);

CREATE TABLE IF NOT EXISTS public.emotions
(
    emotion_id integer NOT NULL DEFAULT nextval('emotions_emotion_id_seq'::regclass),
    emotion_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    icon_url text COLLATE pg_catalog."default",
    CONSTRAINT emotions_pkey PRIMARY KEY (emotion_id)
);

CREATE TABLE IF NOT EXISTS public.learning_topics
(
    topic_id integer NOT NULL DEFAULT nextval('learning_topics_topic_id_seq'::regclass),
    topic_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT learning_topics_pkey PRIMARY KEY (topic_id)
);

CREATE TABLE IF NOT EXISTS public.lessons
(
    lesson_id integer NOT NULL DEFAULT nextval('lessons_lesson_id_seq'::regclass),
    topic_id integer,
    lesson_title character varying(255) COLLATE pg_catalog."default" NOT NULL,
    lesson_content text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT lessons_pkey PRIMARY KEY (lesson_id)
);

CREATE TABLE IF NOT EXISTS public.plan_activities
(
    activity_id integer NOT NULL DEFAULT nextval('plan_activities_activity_id_seq'::regclass),
    topic_id integer,
    activity_description text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT plan_activities_pkey PRIMARY KEY (activity_id)
);

CREATE TABLE IF NOT EXISTS public.preferences_questions
(
    question_id integer NOT NULL DEFAULT nextval('preferences_questions_question_id_seq'::regclass),
    question_text text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT preferences_questions_pkey PRIMARY KEY (question_id)
);

CREATE TABLE IF NOT EXISTS public.profiles
(
    profile_id integer NOT NULL DEFAULT nextval('profiles_profile_id_seq'::regclass),
    user_id integer,
    image_url text COLLATE pg_catalog."default",
    date_of_birth date,
    gender character varying(50) COLLATE pg_catalog."default",
    first_name character varying(100) COLLATE pg_catalog."default",
    last_name character varying(100) COLLATE pg_catalog."default",
    CONSTRAINT profiles_pkey PRIMARY KEY (profile_id)
);

CREATE TABLE IF NOT EXISTS public.reasons
(
    reason_id integer NOT NULL DEFAULT nextval('reasons_reason_id_seq'::regclass),
    reason_text character varying(255) COLLATE pg_catalog."default" NOT NULL,
    icon_url text COLLATE pg_catalog."default",
    CONSTRAINT reasons_pkey PRIMARY KEY (reason_id)
);

CREATE TABLE IF NOT EXISTS public.sub_emotions
(
    sub_emotion_id integer NOT NULL DEFAULT nextval('sub_emotions_sub_emotion_id_seq'::regclass),
    emotion_id integer,
    sub_emotion_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    icon_url text COLLATE pg_catalog."default",
    description text COLLATE pg_catalog."default",
    tips text COLLATE pg_catalog."default",
    CONSTRAINT sub_emotions_pkey PRIMARY KEY (sub_emotion_id)
);

CREATE TABLE IF NOT EXISTS public.topics
(
    topic_id integer NOT NULL DEFAULT nextval('topics_topic_id_seq'::regclass),
    topic_name character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT topics_pkey PRIMARY KEY (topic_id)
);

CREATE TABLE IF NOT EXISTS public.user_preferences_answers
(
    answer_id integer NOT NULL DEFAULT nextval('user_preferences_answers_answer_id_seq'::regclass),
    user_id integer,
    question_id integer,
    answer boolean NOT NULL,
    CONSTRAINT user_preferences_answers_pkey PRIMARY KEY (answer_id)
);

CREATE TABLE IF NOT EXISTS public.user_settings
(
    setting_id integer NOT NULL DEFAULT nextval('user_settings_setting_id_seq'::regclass),
    user_id integer,
    notifications_enabled boolean DEFAULT true,
    start_day_time time without time zone,
    CONSTRAINT user_settings_pkey PRIMARY KEY (setting_id)
);

CREATE TABLE IF NOT EXISTS public.user_topics
(
    user_topic_id integer NOT NULL DEFAULT nextval('user_topics_user_topic_id_seq'::regclass),
    user_id integer,
    topic_id integer,
    CONSTRAINT user_topics_pkey PRIMARY KEY (user_topic_id)
);

CREATE TABLE IF NOT EXISTS public.user_weekly_answers
(
    answer_id integer NOT NULL DEFAULT nextval('user_weekly_answers_answer_id_seq'::regclass),
    user_id integer,
    question_id integer,
    answer boolean,
    answer_date timestamp without time zone DEFAULT CURRENT_TIMESTAMP,
    CONSTRAINT user_weekly_answers_pkey PRIMARY KEY (answer_id)
);

CREATE TABLE IF NOT EXISTS public.userplan_activities
(
    user_activity_id integer NOT NULL DEFAULT nextval('userplan_activities_user_activity_id_seq'::regclass),
    user_id integer,
    activity_id integer,
    CONSTRAINT userplan_activities_pkey PRIMARY KEY (user_activity_id)
);

CREATE TABLE IF NOT EXISTS public.users
(
    user_id integer NOT NULL DEFAULT nextval('users_user_id_seq'::regclass),
    email character varying(255) COLLATE pg_catalog."default" NOT NULL,
    password character varying(255) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT users_pkey PRIMARY KEY (user_id),
    CONSTRAINT users_email_key UNIQUE (email)
);

CREATE TABLE IF NOT EXISTS public.weekly_checking_questions
(
    question_id integer NOT NULL DEFAULT nextval('weekly_checking_questions_question_id_seq'::regclass),
    question_text text COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT weekly_checking_questions_pkey PRIMARY KEY (question_id)
);

ALTER TABLE IF EXISTS public.cbt_questions
    ADD CONSTRAINT cbt_questions_type_id_fkey FOREIGN KEY (type_id)
    REFERENCES public.cbt_types (type_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.daily_emotion_tracks
    ADD CONSTRAINT daily_emotion_tracks_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.depression_test_scores
    ADD CONSTRAINT depression_test_scores_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.lessons
    ADD CONSTRAINT lessons_topic_id_fkey FOREIGN KEY (topic_id)
    REFERENCES public.learning_topics (topic_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.plan_activities
    ADD CONSTRAINT plan_activities_topic_id_fkey FOREIGN KEY (topic_id)
    REFERENCES public.topics (topic_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.profiles
    ADD CONSTRAINT profiles_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.sub_emotions
    ADD CONSTRAINT sub_emotions_emotion_id_fkey FOREIGN KEY (emotion_id)
    REFERENCES public.emotions (emotion_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_preferences_answers
    ADD CONSTRAINT user_preferences_answers_question_id_fkey FOREIGN KEY (question_id)
    REFERENCES public.preferences_questions (question_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_preferences_answers
    ADD CONSTRAINT user_preferences_answers_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_settings
    ADD CONSTRAINT user_settings_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_topics
    ADD CONSTRAINT user_topics_topic_id_fkey FOREIGN KEY (topic_id)
    REFERENCES public.topics (topic_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_topics
    ADD CONSTRAINT user_topics_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_weekly_answers
    ADD CONSTRAINT user_weekly_answers_question_id_fkey FOREIGN KEY (question_id)
    REFERENCES public.weekly_checking_questions (question_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.user_weekly_answers
    ADD CONSTRAINT user_weekly_answers_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.userplan_activities
    ADD CONSTRAINT userplan_activities_activity_id_fkey FOREIGN KEY (activity_id)
    REFERENCES public.plan_activities (activity_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;


ALTER TABLE IF EXISTS public.userplan_activities
    ADD CONSTRAINT userplan_activities_user_id_fkey FOREIGN KEY (user_id)
    REFERENCES public.users (user_id) MATCH SIMPLE
    ON UPDATE NO ACTION
    ON DELETE NO ACTION;

END;